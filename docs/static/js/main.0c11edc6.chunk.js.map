{"version":3,"sources":["helpers/getGits.js","components/Spinner.js","components/Gits.js","Hooks/useFetchGits.js","components/Categorias.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["getGits","category","a","url","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","Spinner","className","role","Gits","useState","loading","state","setstate","useEffect","then","imgs","useFetchGits","src","alt","Categorias","categories","Search","setCategories","value","setValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","aria-label","aria-describedby","onChange","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c11edc6.chunk.js","sourcesContent":["\r\n\r\n\r\nconst getGits = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=20&api_key=hYA8nsqSebY7jPxsAQF6axvt99j3h0sl`\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n\r\n}\r\n\r\n\r\nexport default getGits\r\n","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n              <div className=\"spinner-grow text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden ms-2\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-secondary ms-2\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-success ms-2\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-danger ms-2\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-warning ms-2\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-info ms-2\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-dark ms-2\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n             </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React  from 'react'\r\nimport { useFetchGits } from '../Hooks/useFetchGits'\r\nimport Spinner from './Spinner';\r\n\r\nconst Gits = ({category}) => {\r\n \r\n    const {data, loading} = useFetchGits(category);\r\n \r\n    return (\r\n        \r\n      <>\r\n          {loading && <Spinner/>}\r\n        {\r\n            data.map(img => (\r\n            <div className=\"card mt-2 ms-3 animate__animated animate__fadeInDownBig animate__delay-1s\"  key={img.id}>\r\n                <img src={img.url} className=\"card-img-top\" alt=\"...\"/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center\">{img.title}</h5>\r\n                </div>\r\n            </div>\r\n\r\n            ))\r\n        }\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Gits\r\n","import {useState, useEffect} from 'react'\r\nimport getGits from '../helpers/getGits';\r\n\r\nexport const useFetchGits = (category) => {\r\n\r\n   const [state, setstate] = useState({\r\n       data: [],\r\n       loading: true\r\n   });\r\n\r\n   useEffect(() => {\r\n        getGits(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n        // eslint-disable-next-line \r\n    }, [category])\r\n\r\n   return state;\r\n}\r\n","import React  from 'react'\r\nimport Gits from './Gits'\r\n\r\nconst Categorias = ({categories}) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                categories.map(category => {\r\n                    return <Gits key={category} category={category}  />\r\n                })\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categorias\r\n","import React, {useState} from 'react'\r\n\r\nconst Search = ({setCategories}) => {\r\n    const [value, setValue] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(value.trim().length > 2){\r\n            setCategories(cats => [value, ...cats ])\r\n            setValue(\"\");\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                placeholder=\"Agrega una Categoria\" \r\n                aria-label=\"Agrega una Categoria\" \r\n                aria-describedby=\"button-addon2\"\r\n                value={value}\r\n                onChange= {handleChange}\r\n            />\r\n        </form>\r\n    \r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, {useState} from 'react';\nimport Categorias from './components/Categorias';\nimport Search from './components/Search';\nimport \"./App.css\"\n\n\n\nfunction App() {\n  const [categories, setCategories] = useState([\"Elite\"])\n  \n  return (\n    <div className=\"container\">\n      <h2 className=\"text-center my-5\">\n        Gits App.\n        <small className=\"text-muted\"> Encuentra tus gits favoritos</small>\n      </h2>\n\n      <Search setCategories={setCategories} />\n      <hr />\n      <div className=\"d-flex justify-content-center row row-cols-1 row-cols-sm-2 row-cols-md-3\">\n        <Categorias categories={categories} />\n      </div>\n    </div>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}